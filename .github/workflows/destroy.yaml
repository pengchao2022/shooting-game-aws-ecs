name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirm_destroy:
        description: 'Type "DESTROY" to confirm'
        required: true
        type: string

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: shooting-game

jobs:
  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    
    steps:
    - name: Check confirmation
      run: |
        if [ "${{ github.event.inputs.confirm_destroy }}" != "DESTROY" ]; then
          echo "‚ùå Destruction not confirmed"
          exit 1
        fi

    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Update database credentials
      run: |
        cd terraform
        sed -i "s|db_username = \".*\"|db_username = \"${{ secrets.DB_USERNAME }}\"|" terraform.tfvars
        sed -i "s|db_password = \".*\"|db_password = \"${{ secrets.DB_PASSWORD }}\"|" terraform.tfvars

    - name: Terraform Destroy
      run: |
        cd terraform
        terraform destroy -auto-approve

    - name: Cleanup ECR images
      run: |
        # Clean up old images (keep only latest)
        aws ecr list-images --repository-name ${{ env.PROJECT_NAME }}-frontend --query 'imageIds[?imageTag!=`latest`]' --output text | \
        while read imageDigest; do
          aws ecr batch-delete-image --repository-name ${{ env.PROJECT_NAME }}-frontend --image-ids imageDigest=$imageDigest
        done || true
        
        aws ecr list-images --repository-name ${{ env.PROJECT_NAME }}-backend --query 'imageIds[?imageTag!=`latest`]' --output text | \
        while read imageDigest; do
          aws ecr batch-delete-image --repository-name ${{ env.PROJECT_NAME }}-backend --image-ids imageDigest=$imageDigest
        done || true