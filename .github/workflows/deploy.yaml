name: Deploy to AWS

on:
  push:
    branches: [ main ]

env:
  AWS_REGION: us-east-1
  PROJECT_NAME: shooting-game

jobs:
  deploy:
    name: Deploy Infrastructure
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Get AWS Account ID
      id: get-account-id
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        echo "account_id=$ACCOUNT_ID" >> $GITHUB_OUTPUT

    - name: Setup ECR repositories
      run: |
        # Create ECR repositories if they don't exist
        aws ecr create-repository --repository-name ${{ env.PROJECT_NAME }}-frontend --region ${{ env.AWS_REGION }} || true
        aws ecr create-repository --repository-name ${{ env.PROJECT_NAME }}-backend --region ${{ env.AWS_REGION }} || true

    - name: Login to ECR
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push frontend image
      run: |
        cd frontend
        docker build -t ${{ steps.get-account-id.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-frontend:${{ github.sha }} .
        docker push ${{ steps.get-account-id.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-frontend:${{ github.sha }}

    - name: Build and push backend image
      run: |
        cd backend
        docker build -t ${{ steps.get-account-id.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-backend:${{ github.sha }} .
        docker push ${{ steps.get-account-id.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-backend:${{ github.sha }}

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: |
        cd terraform
        terraform init

    - name: Update Terraform variables
      run: |
        cd terraform
        # Update image tags in terraform.tfvars
        sed -i "s|frontend_image = \".*\"|frontend_image = \"${{ steps.get-account-id.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-frontend:${{ github.sha }}\"|" terraform.tfvars
        sed -i "s|backend_image = \".*\"|backend_image = \"${{ steps.get-account-id.outputs.account_id }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-backend:${{ github.sha }}\"|" terraform.tfvars
        sed -i "s|db_username = \".*\"|db_username = \"${{ secrets.DB_USERNAME }}\"|" terraform.tfvars
        sed -i "s|db_password = \".*\"|db_password = \"${{ secrets.DB_PASSWORD }}\"|" terraform.tfvars

    - name: Terraform Apply
      run: |
        cd terraform
        terraform apply -auto-approve

    - name: Show deployment info
      run: |
        cd terraform
        echo "ðŸš€ Deployment completed!"
        echo "Frontend URL: $(terraform output -raw frontend_url)"
        echo "Backend URL: $(terraform output -raw backend_url)"